[tox]
minversion = 3.2.0
envlist = py39,pep8

[testenv]
usedevelop = True
install_command = pip install {opts} {packages}
setenv =
    VIRTUAL_ENV={envdir}
deps =
       -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
extras =
    yaml
    toml
    baseline
    sarif
commands =
    find bandit -type f -name "*.pyc" -delete
    stestr run {posargs}
allowlist_externals =
    find
passenv =
    http_proxy
    HTTP_PROXY
    https_proxy
    HTTPS_PROXY
    no_proxy
    NO_PROXY

[testenv:linters]
deps = {[testenv:pep8]deps}
usedevelop = False
commands = flake8 {posargs} bandit
           flake8 {posargs} tests
           bandit-baseline -r bandit -ll -ii

[testenv:pep8]
ignore_errors = true
deps = {[testenv]deps}
       .
usedevelop = False
commands = flake8 {posargs} bandit
           flake8 {posargs} tests
           -{[testenv:pylint]commands}
           bandit-baseline -r bandit -ll -ii

[testenv:venv]
commands = {posargs}

[testenv:codesec]
deps = {[testenv]deps}
       .
usedevelop = False
commands = bandit-baseline -r bandit -ll -ii

[testenv:cover]
setenv =
    {[testenv]setenv}
    PYTHON=coverage run --source bandit --parallel-mode
commands =
    coverage erase
    stestr run '{posargs}'
    coverage report

[testenv:docs]
deps = -r{toxinidir}/doc/requirements.txt
commands=
    sphinx-build doc/source doc/build

[flake8]
# [H106] Don't put vim configuration in source files.
# [H203] Use assertIs(Not)None to check for None.
show-source = True
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build
enable-extensions = H106,H203

[testenv:pylint]
commands = -pylint --rcfile=pylintrc bandit

[testenv:format]
skip_install = true
deps =
    pre-commit
commands =
    pre-commit run --all-files --show-diff-on-failure
